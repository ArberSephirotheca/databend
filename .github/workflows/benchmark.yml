name: Benchmark

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - labeled
    branches:
      - main
    paths-ignore:
      - "docs/**"
      - "website/**"
      - "**.md"
      - "docker/**"
      - ".devcontainer/**"
  workflow_dispatch:
    inputs:
      tag:
        description: The tag to run benchmark
        required: true
        type: string

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: true

env:
  BUILD_PROFILE: release
  RUNNER_PROVIDER: aws
  CARGO_INCREMENTAL: 0
  # Remove this env after rust 1.68 has been released.
  CARGO_UNSTABLE_SPARSE_REGISTRY: true

jobs:
  build_release:
    if: github.event_name == 'workflow_dispatch' || contains(github.event.pull_request.labels.*.name, 'ci-benchmark')
    timeout-minutes: 30
    runs-on: [self-hosted, X64, Linux, perf]
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.tag || github.ref }}
          fetch-depth: 0
      - uses: ./.github/actions/build_linux
        with:
          target: x86_64-unknown-linux-gnu
          profile: release
      - name: Get benchmark source
        run: |
          case ${{ github.event_name }} in
            pull_request)
              echo "BENCHMARK_SOURCE=pr" > $GITHUB_ENV
              echo "BENCHMARK_SOURCE_ID=${{ github.event.pull_request.number }}" >> $GITHUB_ENV
              ;;
            workflow_dispatch)
              echo "BENCHMARK_SOURCE=release" > $GITHUB_ENV
              echo "BENCHMARK_SOURCE_ID=${{ github.event.inputs.tag }}" >> $GITHUB_ENV
              ;;
            *)
              echo "Unknown event name: ${{ github.event_name }}"
              exit 1
              ;;
          esac
      - name: Generate benchmark metadata
        run: |
          echo '{}' > metadata.json
          jq ".sha = \"${{ github.sha }}\"" <metadata.json >metadata.json.tmp && mv metadata.json.tmp metadata.json
          jq ".run_id = \"${{ github.run_id }}\"" <metadata.json >metadata.json.tmp && mv metadata.json.tmp metadata.json
          jq ".source = \"${{ env.BENCHMARK_SOURCE }}\"" <metadata.json >metadata.json.tmp && mv metadata.json.tmp metadata.json
          jq ".source_id = \"${{ env.BENCHMARK_SOURCE_ID }}\"" <metadata.json >metadata.json.tmp && mv metadata.json.tmp metadata.json
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: benchmark-metadata
          path: metadata.json
