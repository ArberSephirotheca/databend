name: "Setup Build Tool Binaries"
description: "Setup Build Tool Binaries"
inputs:
  registry:
    description: "Build Tool Docker Registry"
    required: false
    default: datafuselabs
  image:
    description: "Build Tool Docker Image to use"
    required: true
    default: dev
  bypass_env_vars:
    description: "Environment variables bypass to docker container"
    required: false
    default: RUSTFLAGS,RUST_LOG
runs:
  using: "composite"
  steps:
    - name: clean the existing toolchain
      shell: bash
      run: |
        rm -rf $HOME/.cargo
        rm -rf $HOME/.rustup

    - name: setup build-tool binary
      shell: bash
      run: |
        BIN_LOCAL=$HOME/.cargo/bin
        mkdir -p $BIN_LOCAL
        echo "$BIN_LOCAL" >> $GITHUB_PATH

        cat <<EOF >$BIN_LOCAL/build-tool
        #!/bin/bash
        script_name=\$(basename "\$0")
        export IMAGE=${{ inputs.registry }}/build-tool:${{ inputs.image }}
        export CARGO_INCREMENTAL=0
        export CARGO_TERM_COLOR=always
        EOF

        RUNNER_PROVIDER="${RUNNER_PROVIDER:-github}"
        case ${RUNNER_PROVIDER} in
          aws)
            echo "Setting up sccache for AWS S3..."
            cat <<EOF >>$BIN_LOCAL/build-tool
        export RUSTC_WRAPPER=/opt/rust/cargo/bin/sccache
        export SCCACHE_BUCKET=databend-ci
        export SCCACHE_REGION=us-east-2
        export SCCACHE_S3_KEY_PREFIX="cache/"
        export SCCACHE_S3_USE_SSL="true"
        export BYPASS_ENV_VARS=${{ inputs.bypass_env_vars }},CARGO_INCREMENTAL,CARGO_TERM_COLOR,BUILD_PROFILE,RUSTC_WRAPPER,SCCACHE_BUCKET,SCCACHE_REGION,SCCACHE_S3_KEY_PREFIX,SCCACHE_S3_USE_SSL
        EOF
            ;;

          github)
            echo "sccache disabled on GitHub-hosted Runner"
            cat <<EOF >>$BIN_LOCAL/build-tool
        export BYPASS_ENV_VARS=${{ inputs.bypass_env_vars }},CARGO_INCREMENTAL,CARGO_TERM_COLOR,BUILD_PROFILE
        EOF
            ;;

          *)
            ;;
        esac

        cat <<EOF >>$BIN_LOCAL/build-tool
        if [[ \${script_name} == "build-tool" ]]; then
          scripts/setup/run_build_tool.sh \$@
        else
          scripts/setup/run_build_tool.sh \${script_name} \$@
        fi
        EOF

        chmod +x $BIN_LOCAL/build-tool
        ln -s build-tool $BIN_LOCAL/rustc
        ln -s build-tool $BIN_LOCAL/cargo
        ln -s build-tool $BIN_LOCAL/rustup
        ln -s build-tool $BIN_LOCAL/make
        ln -s build-tool $BIN_LOCAL/taplo
        ln -s build-tool $BIN_LOCAL/sccache

    - name: check cargo version
      shell: bash
      run: rustup show

    - name: check disk space
      shell: bash
      run: df -h
