statement ok
drop table if exists t_where_optimizer;

statement ok
create table if not exists t_where_optimizer (a int, b int);

-- SQLs that prewhere optimization will not be applied.

statement query T
explain select a from t_where_optimizer where a = 1;

----
Project
├── projections: [a (#0)]
└── Filter
    ├── filters: [t_where_optimizer.a (#0) = 1]
    └── PhysicalScan
        ├── table: default.default.t_where_optimizer
        ├── filters: [t_where_optimizer.a (#0) = 1]
        ├── order by: []
        └── limit: NONE

statement query T
explain select * from t_where_optimizer where a = b;

----
Filter
    ├── filters: [t_where_optimizer.a (#0) = t_where_optimizer.b (#1)]
    └── PhysicalScan
        ├── table: default.default.t_where_optimizer
        ├── filters: [t_where_optimizer.a (#0) = t_where_optimizer.b (#1)]
        ├── order by: []
        └── limit: NONE

statement query T
explain select * from t_where_optimizer where a = 1 or b > 2;

----
Filter
    ├── filters: [(t_where_optimizer.a (#0) = 1) OR (t_where_optimizer.b (#1) > 2)]
    └── PhysicalScan
        ├── table: default.default.t_where_optimizer
        ├── filters: [(t_where_optimizer.a (#0) = 1) OR (t_where_optimizer.b (#1) > 2)]
        ├── order by: []
        └── limit: NONE

-- SQLs that prewhere optimization will be applied.

statement query T
explain select * from t_where_optimizer where a = 1 and b > 2;

----
PhysicalScan
        ├── table: default.default.t_where_optimizer
        ├── filters: [t_where_optimizer.a (#0) = 1, t_where_optimizer.b (#1) > 2]
        ├── order by: []
        └── limit: NONE

statement query T
explain select * from t_where_optimizer where b = 1;

----
PhysicalScan
        ├── table: default.default.t_where_optimizer
        ├── filters: [t_where_optimizer.b (#1) = 1]
        ├── order by: []
        └── limit: NONE

statement query T
explain select a from t_where_optimizer where b = 1;

----
Project
├── projections: [a (#0)]
└── PhysicalScan
    ├── table: default.default.t_where_optimizer
    ├── filters: [t_where_optimizer.b (#1) = 1]
    ├── order by: []
    └── limit: NONE

statement ok
drop table t_where_optimizer;

-- Tuple (inner column) type test

statement ok
create table t_where_optimizer(id int, s tuple(a int, b int));

statement query T
explain select * from t_where_optimizer where s:a > 0;

----
Project
├── projections: [id (#0),s (#1)] 
└── PhysicalScan
    ├── table: default.default.t_where_optimizer
    ├── filters: [t_where_optimizer.s:a (#2) > 0]
    ├── order by: []
    └── limit: NONE

statement ok
drop table t_where_optimizer;