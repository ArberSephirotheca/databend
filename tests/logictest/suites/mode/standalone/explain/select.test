statement query T
explain select * from numbers(1);

----
Scan: default.system.numbers, filters: []

statement query T
explain select * from (select * from numbers(1)) as t1 where number = 1;

----
Filter: [t1.number (#0) = 1]
└── Scan: default.system.numbers, filters: [t1.number (#0) = 1]

statement query T
explain select * from (select number as a, number + 1 as b from numbers(1)) as t1 where a = 1 and b = 1;

----
Filter: [t1.a (#0) = 1, t1.b (#1) = 1]
└── EvalScalar: [+(numbers.number (#0), 1)]
    └── Scan: default.system.numbers, filters: []

statement query T
explain select * from (select number as a, number + 1 as b from numbers(1)) as t1 where a = 1;

----
EvalScalar: [+(numbers.number (#0), 1)]
└── Filter: [t1.a (#0) = 1]
    └── Scan: default.system.numbers, filters: [t1.a (#0) = 1]

statement query T
explain select * from numbers(1) where number = pow(1, 1 + 1);

----
Filter: [numbers.number (#0) = 1]
└── Scan: default.system.numbers, filters: [numbers.number (#0) = 1]

statement query T
explain select * from numbers(1) where TRUE and 1 = 1;

----
Scan: default.system.numbers, filters: []

statement query T
explain select * from numbers(1) where number = 0 and false;

----
Filter: [false]
└── Scan: default.system.numbers, filters: [false]

statement query T
explain select * from numbers(1) where number = 0 and null;

----
Filter: [false]
└── Scan: default.system.numbers, filters: [false]

statement query T
explain select * from numbers(1) where null;

----
Filter: [NULL]
└── Scan: default.system.numbers, filters: [NULL]

statement query T
explain select a from (select number as a, number as b from numbers(1));

----
Scan: default.system.numbers, filters: []

statement query T
explain select a from (select number as a, number+1 as b from numbers(1));

----
Project: [number (#0)]
└── Scan: default.system.numbers, filters: []

