statement ok
create table if not exists t_where_optimizer (a int, b int);

statement query T
explain select a from t_where_optimizer where a = 1;

----
Project: [a (#0)]
└── Filter: [t_where_optimizer.a (#0) = 1]
    └── Scan: default.default.t_where_optimizer, filters: [t_where_optimizer.a (#0) = 1], Sort: [none], limit: [none]

statement query T
explain select * from t_where_optimizer where a = b;

----
Filter: [t_where_optimizer.a (#0) = t_where_optimizer.b (#1)]
└── Scan: default.default.t_where_optimizer, filters: [t_where_optimizer.a (#0) = t_where_optimizer.b (#1)], Sort: [none], limit: [none]

statement query T
explain select * from t_where_optimizer where a = 1 or b > 2;

----
Filter: [(t_where_optimizer.a (#0) = 1) OR (t_where_optimizer.b (#1) > 2)]
└── Scan: default.default.t_where_optimizer, filters: [(t_where_optimizer.a (#0) = 1) OR (t_where_optimizer.b (#1) > 2)], Sort: [none], limit: [none]

statement query T
explain select * from t_where_optimizer where a = 1 and b > 2;

----
Scan: default.default.t_where_optimizer, filters: [t_where_optimizer.a (#0) = 1, t_where_optimizer.b (#1) > 2], Sort: [none], limit: [none]

statement query T
explain select * from t_where_optimizer where b = 1;

----
Scan: default.default.t_where_optimizer, filters: [t_where_optimizer.b (#1) = 1], Sort: [none], limit: [none]

statement query T
explain select a from t_where_optimizer where b = 1;

----
Project: [a (#0)]
└── Scan: default.default.t_where_optimizer, filters: [t_where_optimizer.b (#1) = 1], Sort: [none], limit: [none]

statement ok
drop table t_where_optimizer;